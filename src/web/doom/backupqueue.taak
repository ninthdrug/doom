import doom._
import java.io.File
import java.text.SimpleDateFormat
import java.util.Date
import ninthdrug.command._

val servername = request.params("server")
val queuename = request.params("queue")
val server = ConfigCache.getServer(servername)
val domain = ConfigCache.getDomain(server.domainname)
val dir = "/data/backups/queues/" + server.domainname + "/" + server.name
sh("mkdir -p " + dir)
val dateFormat = new SimpleDateFormat("yyyy-MM-dd_HHmmss")
val date = dateFormat.format(new Date())
var path = dir + "/" + queuename + "_" + date + ".xml"
var file = new File(path)
var n = 0
while (file.exists) {
  n = n + 1
  path = dir + "/" + queuename + "_" + date + "_" + n + ".xml"
  file = new File(path)
}
val zip_path = path.substring(0, path.length - 3) + "zip"
val result = Chain(
  BackupQueue(servername, queuename, path),
  Sh("/usr/bin/zip -q " + zip_path + " " + path),
  Sh("rm -f " + path)
).result
if (result.toBoolean) {
  "OK"
} else {
  println("backup queue error: ")
  result.print
  "ERROR"
}
